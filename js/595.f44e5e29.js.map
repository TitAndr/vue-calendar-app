{"version":3,"file":"js/595.f44e5e29.js","mappings":"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","sources":["webpack://calendar-app/./src/utils/helper.ts","webpack://calendar-app/../../Vue%20Projects/calendar-app/src/components/EventModal.vue?97fd","webpack://calendar-app/../../Vue%20Projects/calendar-app/src/components/EventModal.vue","webpack://calendar-app/./src/components/EventModal.vue","webpack://calendar-app/./src/components/EventModal.vue?c1a4"],"sourcesContent":["import { PopupCallback, Position } from \"@/data/interfaces\";\n\nexport const formatDate = (date: Date) => {\n  const yyyy = date.getFullYear();\n  const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(date.getDate()).padStart(2, \"0\");\n\n  return `${yyyy}-${mm}-${dd}`;\n};\n\nexport const formatTime = (date: Date) => {\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n\n  return `${hours}:${minutes}`;\n};\n\nexport const adjustPosition = (\n  popup: HTMLElement | null,\n  position: Position,\n  callback: PopupCallback\n) => {\n  if (!popup) return;\n\n  const rect = popup.getBoundingClientRect();\n  const padding = 8;\n\n  let x = position.x - rect.width / 2;\n  let y = position.y + 16;\n\n  if (y + rect.height + padding > window.innerHeight) {\n    y = position.y - rect.height - 20;\n  }\n\n  if (x + rect.width > window.innerWidth - padding)\n    x = window.innerWidth - rect.width - padding;\n  if (x < padding) x = padding;\n\n  callback({ x, y });\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"modal-content\" }\nconst _hoisted_2 = { class: \"input-group\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n}\nconst _hoisted_4 = { class: \"input-group\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n}\nconst _hoisted_6 = { class: \"input-group\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error\"\n}\nconst _hoisted_8 = { class: \"input-group\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"error\"\n}\nconst _hoisted_10 = { class: \"input-group color-picker\" }\nconst _hoisted_11 = { class: \"modal-footer\" }\nconst _hoisted_12 = [\"disabled\"]\n\nimport {\n  ref,\n  onMounted,\n  onUnmounted,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { DateSelectArg, EventApi } from \"@fullcalendar/core\";\nimport { computed } from \"@vue/reactivity\";\nimport { adjustPosition, formatDate, formatTime } from \"@/utils/helper\";\nimport { CalendarEvent, Position } from \"@/data/interfaces\";\n\ntype Props = {\n  show: boolean;\n  editingEvent: EventApi | DateSelectArg | null;\n  position: { x: number; y: number };\n};\n\ntype Emits = {\n  (e: \"save\", eventData: CalendarEvent): void;\n  (e: \"delete\", eventId: string): void;\n  (e: \"close\"): void;\n};\n\ntype EventForm = {\n  title: string;\n  startDate: string;\n  endDate: string;\n  time: string;\n  notes: string;\n  color: string;\n  titleError: string;\n  dateError: string;\n};\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'EventModal',\n  props: {\n    show: { type: Boolean },\n    editingEvent: {},\n    position: {}\n  },\n  emits: [\"save\", \"delete\", \"close\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props;\nconst emit = __emit;\n\nconst initState = {\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n  color: \"#3788d8\",\n  titleError: \"\",\n  dateError: \"\",\n};\n\nconst eventForm = ref<EventForm>({ ...initState });\nconst modalRef = ref<HTMLElement | null>(null);\nconst validation = ref<Partial<EventForm>>({\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n});\nconst pos = ref<Position>({ x: props.position.x, y: props.position.y });\n\nconst isNewEvent = computed(() => !props.editingEvent);\n\nconst validateFields = (field?: keyof EventForm) => {\n  Object.keys(validation.value).forEach((f) => {\n    const fieldName = field || (f as keyof EventForm);\n    validation.value[fieldName as keyof typeof validation.value] = !eventForm\n      .value[fieldName]\n      ? \"This field is required\"\n      : \"\";\n\n    if (fieldName === \"title\") {\n      validateTitle();\n    }\n    if (fieldName === \"startDate\" || fieldName === \"endDate\") {\n      validateDate();\n    }\n  });\n\n  return Object.values(validation.value).some((v) => v);\n};\n\nconst validateTitle = () => {\n  const { title } = eventForm.value;\n  if (title.length > 30) {\n    validation.value.title = \"Maximum 30 characters\";\n  }\n};\n\nconst validateDate = () => {\n  const { startDate, endDate } = eventForm.value;\n  [startDate, endDate].forEach((dateStr, index) => {\n    const date = new Date(dateStr);\n    if (!dateStr || isNaN(date.getTime())) {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"Not a valid date\";\n    } else {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"\";\n    }\n  });\n};\n\nconst handleSave = () => {\n  const { title, color, startDate, endDate, time } = eventForm.value;\n\n  if (validateFields()) {\n    return;\n  }\n\n  const id = props.editingEvent\n    ? (props.editingEvent as EventApi).id\n    : Date.now().toString();\n\n  emit(\"save\", {\n    id,\n    title,\n    start: `${startDate}T${time}:00`,\n    end: `${endDate}T${time}:00`,\n    backgroundColor: color,\n    borderColor: color,\n  });\n  resetForm();\n};\n\nconst resetForm = () => {\n  eventForm.value = initState;\n};\n\nconst handleOutsideClick = (e: MouseEvent) => {\n  if (modalRef.value && !modalRef.value.contains(e.target as Node)) {\n    emit(\"close\");\n  }\n};\n\nconst onEscClose = (e: KeyboardEvent) => {\n  if (e.key === \"Escape\") {\n    emit(\"close\");\n  }\n};\n\nwatch(\n  () => props.show,\n  (val) => {\n    if (val) {\n      nextTick().then(() => {\n        adjustPosition(modalRef.value, props.position, (newPos) => {\n          pos.value = newPos;\n        });\n      });\n    }\n  },\n  { immediate: true }\n);\n\nonMounted(() => {\n  const { editingEvent } = props;\n  if (editingEvent) {\n    const { title, start, end, backgroundColor } = editingEvent as EventApi;\n    eventForm.value.title = title || \"\";\n\n    const startDate = start ? new Date(start) : new Date();\n\n    eventForm.value.startDate = formatDate(new Date(start || \"\"));\n    eventForm.value.endDate = formatDate(new Date(end || \"\"));\n    eventForm.value.time = formatTime(startDate);\n\n    eventForm.value.color = backgroundColor || \"#3788d8\";\n  } else {\n    resetForm();\n  }\n\n  window.addEventListener(\"keydown\", onEscClose);\n  document.addEventListener(\"mousedown\", handleOutsideClick);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"keydown\", onEscClose);\n  document.removeEventListener(\"mousedown\", handleOutsideClick);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.show)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"modal\",\n        ref_key: \"modalRef\",\n        ref: modalRef,\n        style: _normalizeStyle({ top: `${pos.value.y}px`, left: `${pos.value.x}px` })\n      }, [\n        _createElementVNode(\"button\", {\n          class: \"close-btn\",\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('close')))\n        }, \"×\"),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _withDirectives(_createElementVNode(\"input\", {\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((eventForm.value.title) = $event)),\n              placeholder: \"event name\",\n              class: \"input-field\",\n              onBlur: _cache[2] || (_cache[2] = ($event: any) => (validateFields('title')))\n            }, null, 544), [\n              [_vModelText, eventForm.value.title]\n            ]),\n            (validation.value.title)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(validation.value.title), 1))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"date\",\n              placeholder: \"event start date\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((eventForm.value.startDate) = $event)),\n              class: \"input-field\",\n              onBlur: _cache[4] || (_cache[4] = ($event: any) => (validateFields('startDate')))\n            }, null, 544), [\n              [_vModelText, eventForm.value.startDate]\n            ]),\n            (validation.value.startDate)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(validation.value.startDate), 1))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"time\",\n              placeholder: \"event time\",\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((eventForm.value.time) = $event)),\n              class: \"input-field\",\n              onBlur: _cache[6] || (_cache[6] = ($event: any) => (validateFields('time')))\n            }, null, 544), [\n              [_vModelText, eventForm.value.time]\n            ]),\n            (validation.value.time)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(validation.value.time), 1))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _withDirectives(_createElementVNode(\"input\", {\n              placeholder: \"notes\",\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((eventForm.value.notes) = $event)),\n              class: \"input-field\",\n              onBlur: _cache[8] || (_cache[8] = ($event: any) => (validateFields('notes')))\n            }, null, 544), [\n              [_vModelText, eventForm.value.notes]\n            ]),\n            (validation.value.notes)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, _toDisplayString(validation.value.notes), 1))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_10, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"color\",\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((eventForm.value.color) = $event)),\n              class: \"color-input\"\n            }, null, 512), [\n              [_vModelText, eventForm.value.color]\n            ]),\n            _cache[11] || (_cache[11] = _createElementVNode(\"span\", { class: \"color-label\" }, \"Select color\", -1))\n          ]),\n          _createElementVNode(\"div\", _hoisted_11, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.$emit('close')))\n            }, _toDisplayString(_unref(isNewEvent) ? \"Cancel\" : \"Discard\"), 1),\n            _createElementVNode(\"button\", {\n              onClick: handleSave,\n              disabled: !!eventForm.value.titleError || !!eventForm.value.dateError\n            }, _toDisplayString(_unref(isNewEvent) ? \"Save\" : \"Edit\"), 9, _hoisted_12)\n          ])\n        ])\n      ], 4))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\n  <div\n    class=\"modal\"\n    v-if=\"show\"\n    ref=\"modalRef\"\n    :style=\"{ top: `${pos.y}px`, left: `${pos.x}px` }\"\n  >\n    <button class=\"close-btn\" @click=\"$emit('close')\">×</button>\n    <div class=\"modal-content\">\n      <div class=\"input-group\">\n        <input\n          v-model=\"eventForm.title\"\n          placeholder=\"event name\"\n          class=\"input-field\"\n          @blur=\"validateFields('title')\"\n        />\n        <span v-if=\"validation.title\" class=\"error\">{{\n          validation.title\n        }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          type=\"date\"\n          placeholder=\"event start date\"\n          v-model=\"eventForm.startDate\"\n          class=\"input-field\"\n          @blur=\"validateFields('startDate')\"\n        />\n        <span v-if=\"validation.startDate\" class=\"error\">{{\n          validation.startDate\n        }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          type=\"time\"\n          placeholder=\"event time\"\n          v-model=\"eventForm.time\"\n          class=\"input-field\"\n          @blur=\"validateFields('time')\"\n        />\n        <span v-if=\"validation.time\" class=\"error\">{{ validation.time }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          placeholder=\"notes\"\n          v-model=\"eventForm.notes\"\n          class=\"input-field\"\n          @blur=\"validateFields('notes')\"\n        />\n        <span v-if=\"validation.notes\" class=\"error\">{{\n          validation.notes\n        }}</span>\n      </div>\n\n      <div class=\"input-group color-picker\">\n        <input type=\"color\" v-model=\"eventForm.color\" class=\"color-input\" />\n        <span class=\"color-label\">Select color</span>\n      </div>\n\n      <div class=\"modal-footer\">\n        <button @click=\"$emit('close')\">\n          {{ isNewEvent ? \"Cancel\" : \"Discard\" }}\n        </button>\n        <button\n          @click=\"handleSave\"\n          :disabled=\"!!eventForm.titleError || !!eventForm.dateError\"\n        >\n          {{ isNewEvent ? \"Save\" : \"Edit\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  defineProps,\n  defineEmits,\n  ref,\n  onMounted,\n  onUnmounted,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { DateSelectArg, EventApi } from \"@fullcalendar/core\";\nimport { computed } from \"@vue/reactivity\";\nimport { adjustPosition, formatDate, formatTime } from \"@/utils/helper\";\nimport { CalendarEvent, Position } from \"@/data/interfaces\";\n\ntype Props = {\n  show: boolean;\n  editingEvent: EventApi | DateSelectArg | null;\n  position: { x: number; y: number };\n};\n\ntype Emits = {\n  (e: \"save\", eventData: CalendarEvent): void;\n  (e: \"delete\", eventId: string): void;\n  (e: \"close\"): void;\n};\n\ntype EventForm = {\n  title: string;\n  startDate: string;\n  endDate: string;\n  time: string;\n  notes: string;\n  color: string;\n  titleError: string;\n  dateError: string;\n};\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst initState = {\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n  color: \"#3788d8\",\n  titleError: \"\",\n  dateError: \"\",\n};\n\nconst eventForm = ref<EventForm>({ ...initState });\nconst modalRef = ref<HTMLElement | null>(null);\nconst validation = ref<Partial<EventForm>>({\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n});\nconst pos = ref<Position>({ x: props.position.x, y: props.position.y });\n\nconst isNewEvent = computed(() => !props.editingEvent);\n\nconst validateFields = (field?: keyof EventForm) => {\n  Object.keys(validation.value).forEach((f) => {\n    const fieldName = field || (f as keyof EventForm);\n    validation.value[fieldName as keyof typeof validation.value] = !eventForm\n      .value[fieldName]\n      ? \"This field is required\"\n      : \"\";\n\n    if (fieldName === \"title\") {\n      validateTitle();\n    }\n    if (fieldName === \"startDate\" || fieldName === \"endDate\") {\n      validateDate();\n    }\n  });\n\n  return Object.values(validation.value).some((v) => v);\n};\n\nconst validateTitle = () => {\n  const { title } = eventForm.value;\n  if (title.length > 30) {\n    validation.value.title = \"Maximum 30 characters\";\n  }\n};\n\nconst validateDate = () => {\n  const { startDate, endDate } = eventForm.value;\n  [startDate, endDate].forEach((dateStr, index) => {\n    const date = new Date(dateStr);\n    if (!dateStr || isNaN(date.getTime())) {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"Not a valid date\";\n    } else {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"\";\n    }\n  });\n};\n\nconst handleSave = () => {\n  const { title, color, startDate, endDate, time } = eventForm.value;\n\n  if (validateFields()) {\n    return;\n  }\n\n  const id = props.editingEvent\n    ? (props.editingEvent as EventApi).id\n    : Date.now().toString();\n\n  emit(\"save\", {\n    id,\n    title,\n    start: `${startDate}T${time}:00`,\n    end: `${endDate}T${time}:00`,\n    backgroundColor: color,\n    borderColor: color,\n  });\n  resetForm();\n};\n\nconst resetForm = () => {\n  eventForm.value = initState;\n};\n\nconst handleOutsideClick = (e: MouseEvent) => {\n  if (modalRef.value && !modalRef.value.contains(e.target as Node)) {\n    emit(\"close\");\n  }\n};\n\nconst onEscClose = (e: KeyboardEvent) => {\n  if (e.key === \"Escape\") {\n    emit(\"close\");\n  }\n};\n\nwatch(\n  () => props.show,\n  (val) => {\n    if (val) {\n      nextTick().then(() => {\n        adjustPosition(modalRef.value, props.position, (newPos) => {\n          pos.value = newPos;\n        });\n      });\n    }\n  },\n  { immediate: true }\n);\n\nonMounted(() => {\n  const { editingEvent } = props;\n  if (editingEvent) {\n    const { title, start, end, backgroundColor } = editingEvent as EventApi;\n    eventForm.value.title = title || \"\";\n\n    const startDate = start ? new Date(start) : new Date();\n\n    eventForm.value.startDate = formatDate(new Date(start || \"\"));\n    eventForm.value.endDate = formatDate(new Date(end || \"\"));\n    eventForm.value.time = formatTime(startDate);\n\n    eventForm.value.color = backgroundColor || \"#3788d8\";\n  } else {\n    resetForm();\n  }\n\n  window.addEventListener(\"keydown\", onEscClose);\n  document.addEventListener(\"mousedown\", handleOutsideClick);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"keydown\", onEscClose);\n  document.removeEventListener(\"mousedown\", handleOutsideClick);\n});\n</script>\n","<template>\n  <div\n    class=\"modal\"\n    v-if=\"show\"\n    ref=\"modalRef\"\n    :style=\"{ top: `${pos.y}px`, left: `${pos.x}px` }\"\n  >\n    <button class=\"close-btn\" @click=\"$emit('close')\">×</button>\n    <div class=\"modal-content\">\n      <div class=\"input-group\">\n        <input\n          v-model=\"eventForm.title\"\n          placeholder=\"event name\"\n          class=\"input-field\"\n          @blur=\"validateFields('title')\"\n        />\n        <span v-if=\"validation.title\" class=\"error\">{{\n          validation.title\n        }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          type=\"date\"\n          placeholder=\"event start date\"\n          v-model=\"eventForm.startDate\"\n          class=\"input-field\"\n          @blur=\"validateFields('startDate')\"\n        />\n        <span v-if=\"validation.startDate\" class=\"error\">{{\n          validation.startDate\n        }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          type=\"time\"\n          placeholder=\"event time\"\n          v-model=\"eventForm.time\"\n          class=\"input-field\"\n          @blur=\"validateFields('time')\"\n        />\n        <span v-if=\"validation.time\" class=\"error\">{{ validation.time }}</span>\n      </div>\n\n      <div class=\"input-group\">\n        <input\n          placeholder=\"notes\"\n          v-model=\"eventForm.notes\"\n          class=\"input-field\"\n          @blur=\"validateFields('notes')\"\n        />\n        <span v-if=\"validation.notes\" class=\"error\">{{\n          validation.notes\n        }}</span>\n      </div>\n\n      <div class=\"input-group color-picker\">\n        <input type=\"color\" v-model=\"eventForm.color\" class=\"color-input\" />\n        <span class=\"color-label\">Select color</span>\n      </div>\n\n      <div class=\"modal-footer\">\n        <button @click=\"$emit('close')\">\n          {{ isNewEvent ? \"Cancel\" : \"Discard\" }}\n        </button>\n        <button\n          @click=\"handleSave\"\n          :disabled=\"!!eventForm.titleError || !!eventForm.dateError\"\n        >\n          {{ isNewEvent ? \"Save\" : \"Edit\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  defineProps,\n  defineEmits,\n  ref,\n  onMounted,\n  onUnmounted,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { DateSelectArg, EventApi } from \"@fullcalendar/core\";\nimport { computed } from \"@vue/reactivity\";\nimport { adjustPosition, formatDate, formatTime } from \"@/utils/helper\";\nimport { CalendarEvent, Position } from \"@/data/interfaces\";\n\ntype Props = {\n  show: boolean;\n  editingEvent: EventApi | DateSelectArg | null;\n  position: { x: number; y: number };\n};\n\ntype Emits = {\n  (e: \"save\", eventData: CalendarEvent): void;\n  (e: \"delete\", eventId: string): void;\n  (e: \"close\"): void;\n};\n\ntype EventForm = {\n  title: string;\n  startDate: string;\n  endDate: string;\n  time: string;\n  notes: string;\n  color: string;\n  titleError: string;\n  dateError: string;\n};\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst initState = {\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n  color: \"#3788d8\",\n  titleError: \"\",\n  dateError: \"\",\n};\n\nconst eventForm = ref<EventForm>({ ...initState });\nconst modalRef = ref<HTMLElement | null>(null);\nconst validation = ref<Partial<EventForm>>({\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  time: \"\",\n  notes: \"\",\n});\nconst pos = ref<Position>({ x: props.position.x, y: props.position.y });\n\nconst isNewEvent = computed(() => !props.editingEvent);\n\nconst validateFields = (field?: keyof EventForm) => {\n  Object.keys(validation.value).forEach((f) => {\n    const fieldName = field || (f as keyof EventForm);\n    validation.value[fieldName as keyof typeof validation.value] = !eventForm\n      .value[fieldName]\n      ? \"This field is required\"\n      : \"\";\n\n    if (fieldName === \"title\") {\n      validateTitle();\n    }\n    if (fieldName === \"startDate\" || fieldName === \"endDate\") {\n      validateDate();\n    }\n  });\n\n  return Object.values(validation.value).some((v) => v);\n};\n\nconst validateTitle = () => {\n  const { title } = eventForm.value;\n  if (title.length > 30) {\n    validation.value.title = \"Maximum 30 characters\";\n  }\n};\n\nconst validateDate = () => {\n  const { startDate, endDate } = eventForm.value;\n  [startDate, endDate].forEach((dateStr, index) => {\n    const date = new Date(dateStr);\n    if (!dateStr || isNaN(date.getTime())) {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"Not a valid date\";\n    } else {\n      const field = index === 0 ? \"startDate\" : \"endDate\";\n      validation.value[field] = \"\";\n    }\n  });\n};\n\nconst handleSave = () => {\n  const { title, color, startDate, endDate, time } = eventForm.value;\n\n  if (validateFields()) {\n    return;\n  }\n\n  const id = props.editingEvent\n    ? (props.editingEvent as EventApi).id\n    : Date.now().toString();\n\n  emit(\"save\", {\n    id,\n    title,\n    start: `${startDate}T${time}:00`,\n    end: `${endDate}T${time}:00`,\n    backgroundColor: color,\n    borderColor: color,\n  });\n  resetForm();\n};\n\nconst resetForm = () => {\n  eventForm.value = initState;\n};\n\nconst handleOutsideClick = (e: MouseEvent) => {\n  if (modalRef.value && !modalRef.value.contains(e.target as Node)) {\n    emit(\"close\");\n  }\n};\n\nconst onEscClose = (e: KeyboardEvent) => {\n  if (e.key === \"Escape\") {\n    emit(\"close\");\n  }\n};\n\nwatch(\n  () => props.show,\n  (val) => {\n    if (val) {\n      nextTick().then(() => {\n        adjustPosition(modalRef.value, props.position, (newPos) => {\n          pos.value = newPos;\n        });\n      });\n    }\n  },\n  { immediate: true }\n);\n\nonMounted(() => {\n  const { editingEvent } = props;\n  if (editingEvent) {\n    const { title, start, end, backgroundColor } = editingEvent as EventApi;\n    eventForm.value.title = title || \"\";\n\n    const startDate = start ? new Date(start) : new Date();\n\n    eventForm.value.startDate = formatDate(new Date(start || \"\"));\n    eventForm.value.endDate = formatDate(new Date(end || \"\"));\n    eventForm.value.time = formatTime(startDate);\n\n    eventForm.value.color = backgroundColor || \"#3788d8\";\n  } else {\n    resetForm();\n  }\n\n  window.addEventListener(\"keydown\", onEscClose);\n  document.addEventListener(\"mousedown\", handleOutsideClick);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"keydown\", onEscClose);\n  document.removeEventListener(\"mousedown\", handleOutsideClick);\n});\n</script>\n","import script from \"./EventModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EventModal.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["formatDate","date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","formatTime","hours","getHours","minutes","getMinutes","adjustPosition","popup","position","callback","rect","getBoundingClientRect","padding","x","width","y","height","window","innerHeight","innerWidth","_hoisted_1","class","_hoisted_2","_hoisted_3","key","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_defineComponent","__name","props","show","type","Boolean","editingEvent","emits","setup","__props","emit","__emit","initState","title","startDate","endDate","time","notes","color","titleError","dateError","eventForm","ref","modalRef","validation","pos","isNewEvent","computed","validateFields","field","Object","keys","value","forEach","f","fieldName","validateTitle","validateDate","values","some","v","length","dateStr","index","Date","isNaN","getTime","handleSave","id","now","toString","start","end","backgroundColor","borderColor","resetForm","handleOutsideClick","e","contains","target","onEscClose","watch","val","nextTick","then","newPos","immediate","onMounted","addEventListener","document","onUnmounted","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","ref_key","style","_normalizeStyle","top","left","_createElementVNode","onClick","$event","$emit","_withDirectives","placeholder","onBlur","_vModelText","_toDisplayString","_createCommentVNode","_unref","disabled","__exports__"],"sourceRoot":""}